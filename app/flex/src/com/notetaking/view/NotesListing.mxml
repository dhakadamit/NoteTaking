<?xml version="1.0" encoding="utf-8"?>
<mx:VBox width="100%" verticalGap="10" xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init();" show="init();">
		
		<mx:Script>
			<![CDATA[
				import com.notetaking.model.enums.Tabs;
				import com.notetaking.event.NotesTotalCountEvent;
				import mx.core.Application;
				import com.notetaking.model.Note;
				import mx.events.ListEvent;
				import mx.controls.Alert;
				import mx.events.ItemClickEvent;
				import com.notetaking.utils.PaginationManager;
				import com.notetaking.event.GetAllNotesEvent;
				import com.notetaking.model.NoteTakingApplicationModelLocator;
				
				[Bindable]
				private var model:NoteTakingApplicationModelLocator = NoteTakingApplicationModelLocator.getInstance();
				[Bindable]
				private var paginationManager:PaginationManager = new PaginationManager(getAllNotes, totalCount);
				private var contentQuery:String = "";
				private var titleQuery:String = "";					
				private var tagQuery:String = "";					
					
				private function init():void {
					initializePaginationManager();
					attachEvents();
				} 	
				
				private function initializePaginationManager():void {
					paginationManager.totalResultsPerPage = 15;
					paginationManager.initialize();
					paginationManager.nextSetOfResults();
				}
				
				private function performSearch(event:Event):void {
					contentQuery = contentQueryBox.text;
					titleQuery = titleQueryBox.text;
					tagQuery = tagQueryBox.text.split(" ").join(",");
					initializePaginationManager();
				}
				
				private function attachEvents():void {
					next.addEventListener(MouseEvent.CLICK, paginationManager.nextSetOfResults);
					previous.addEventListener(MouseEvent.CLICK, paginationManager.previousSetOfResults);
					submitQuery.addEventListener(MouseEvent.CLICK, performSearch);	
				}
				
				private function getAllNotes(pageNumber:Number, callback:Function):void {
					new GetAllNotesEvent(pageNumber, contentQuery, titleQuery, tagQuery).dispatch();
					new NotesTotalCountEvent(contentQuery, titleQuery, tagQuery, callback).dispatch();
				}
				
				private function totalCount():Number {
					return model.notesTotalCount;
				}
				
				private function showItem(event:ListEvent):void {
					model.selectedNote = Note (event.itemRenderer.data);
					Application.application.mainAccordian.selectedIndex = Tabs.EDIT;
				}
					
			]]>
		</mx:Script>
		
		
		<mx:Label text="All Notes" fontSize="14" fontWeight="bold"/>
			
		<mx:HBox width="100%">
			<mx:VBox width="70%">
				<mx:HBox width="100%">
					<mx:Label text="Content" fontWeight="bold" fontSize="12"/>
					<mx:TextInput id="contentQueryBox" width="70%"/>
				</mx:HBox>
				<mx:HBox width="100%">
					<mx:Label text="Title" fontWeight="bold" fontSize="12"/>
					<mx:TextInput id="titleQueryBox" width="70%"/>	
				</mx:HBox>
				<mx:HBox width="100%">
					<mx:Label text="Tags" fontWeight="bold" fontSize="12"/>
					<mx:TextInput id="tagQueryBox" width="70%"/>
				</mx:HBox>					
			</mx:VBox>
			
			<mx:Button label="Search" id="submitQuery"/>
		</mx:HBox>
	
		
		<mx:DataGrid id="notes" dataProvider="{model.notes}" rowCount="{model.notes.length}" width="100%" itemClick="showItem(event);">
			<mx:columns>
				<mx:DataGridColumn dataField="title" headerText="Title"/>
				<mx:DataGridColumn dataField="plainContent" headerText="CreatedAt" wordWrap="true"/>
				<mx:DataGridColumn dataField="createdAt" headerText="CreatedAt"/>
				<mx:DataGridColumn headerText="Tags">
					<mx:itemRenderer>
						<mx:Component>
							<mx:Label text="{data.namesOfAllTags}"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
		
		<mx:HBox verticalAlign="middle" horizontalGap="10">
			<mx:Label text="{paginationManager.displayString}"/> 
			<mx:LinkButton id="previous">
				<mx:overSkin>@Embed(source='../../../assets/images/prevMonthOverSkin.png')</mx:overSkin>
				<mx:upSkin>@Embed(source='../../../assets/images/prevMonthUpSkin.png')</mx:upSkin>
			</mx:LinkButton>
			<mx:LinkButton id="next">
				<mx:overSkin>@Embed(source='../../../assets/images/nextMonthOverSkin.png')</mx:overSkin>
				<mx:upSkin>@Embed(source='../../../assets/images/nextMonthUpSkin.png')</mx:upSkin>
			</mx:LinkButton>
		</mx:HBox>

		
	</mx:VBox>
